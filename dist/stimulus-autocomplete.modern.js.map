{"version":3,"file":"stimulus-autocomplete.modern.js","sources":["../src/autocomplete.mjs"],"sourcesContent":["import { Controller } from \"@hotwired/stimulus\"\nimport debounce from \"lodash.debounce\"\n\nexport default class extends Controller {\n  static targets = [\"input\", \"hidden\", \"results\"]\n  static classes = [\"selected\"]\n  static values = {\n    submitOnEnter: Boolean,\n    url: String,\n    minLength: Number,\n    /*\n     * Should we skip adding/removing the \"hidden\" property from resultsTarget?\n     *\n     * If set, you must listen to the \"toggle\" event from this\n     * controller to manually show/hide the results target.\n     */\n    skipHiddenProperty: Boolean,\n  }\n\n  connect() {\n    this.close();\n\n    // chrome ignores autocomplete=off in favor of series of defined autocomplete values in their WHATWG standard\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=468153#c164\n    this.inputTarget.hasAttribute(\"autocomplete\") || this.inputTarget.setAttribute(\"autocomplete\", \"off\")\n    this.inputTarget.setAttribute(\"spellcheck\", \"false\")\n\n    this.mouseDown = false\n\n    this.onInputChange = debounce(this.onInputChange.bind(this), 300)\n    this.onResultsClick = this.onResultsClick.bind(this)\n    this.onResultsMouseDown = this.onResultsMouseDown.bind(this)\n    this.onInputBlur = this.onInputBlur.bind(this)\n    this.onKeydown = this.onKeydown.bind(this)\n\n    this.inputTarget.addEventListener(\"keydown\", this.onKeydown)\n    this.inputTarget.addEventListener(\"blur\", this.onInputBlur)\n    this.inputTarget.addEventListener(\"input\", this.onInputChange)\n    this.resultsTarget.addEventListener(\"mousedown\", this.onResultsMouseDown)\n    this.resultsTarget.addEventListener(\"click\", this.onResultsClick)\n\n    if (typeof this.inputTarget.getAttribute(\"autofocus\") === \"string\") {\n      this.inputTarget.focus()\n    }\n  }\n\n  disconnect() {\n    if (this.hasInputTarget) {\n      this.inputTarget.removeEventListener(\"keydown\", this.onKeydown)\n      this.inputTarget.removeEventListener(\"focus\", this.onInputFocus)\n      this.inputTarget.removeEventListener(\"blur\", this.onInputBlur)\n      this.inputTarget.removeEventListener(\"input\", this.onInputChange)\n    }\n    if (this.hasResultsTarget) {\n      this.resultsTarget.removeEventListener(\n        \"mousedown\",\n        this.onResultsMouseDown\n      )\n      this.resultsTarget.removeEventListener(\"click\", this.onResultsClick)\n    }\n  }\n\n  sibling(next) {\n    const options = Array.from(\n      this.resultsTarget.querySelectorAll(\n        '[role=\"option\"]:not([aria-disabled])'\n      )\n    )\n    const selected = this.resultsTarget.querySelector('[aria-selected=\"true\"]')\n    const index = options.indexOf(selected)\n    const sibling = next ? options[index + 1] : options[index - 1]\n    const def = next ? options[0] : options[options.length - 1]\n    return sibling || def\n  }\n\n  select(target) {\n    for (const el of this.resultsTarget.querySelectorAll(\n      '[aria-selected=\"true\"]'\n    )) {\n      el.removeAttribute(\"aria-selected\")\n      el.classList.remove(...this.selectedClasses)\n    }\n    target.setAttribute(\"aria-selected\", \"true\")\n    target.classList.add(...this.selectedClasses)\n    this.inputTarget.setAttribute(\"aria-activedescendant\", target.id)\n    target.scrollIntoView(false)\n  }\n\n  onKeydown(event) {\n    switch (event.key) {\n      case \"Escape\":\n        if (!this.isHidden) {\n          this.hideAndRemoveOptions()\n          event.stopPropagation()\n          event.preventDefault()\n        }\n        break\n      case \"ArrowDown\":\n        {\n          const item = this.sibling(true)\n          if (item) this.select(item)\n          event.preventDefault()\n        }\n        break\n      case \"ArrowUp\":\n        {\n          const item = this.sibling(false)\n          if (item) this.select(item)\n          event.preventDefault()\n        }\n        break\n      case \"Tab\":\n        {\n          const selected = this.resultsTarget.querySelector(\n            '[aria-selected=\"true\"]'\n          )\n          if (selected) {\n            this.commit(selected)\n          }\n        }\n        break\n      case \"Enter\":\n        {\n          const selected = this.resultsTarget.querySelector(\n            '[aria-selected=\"true\"]'\n          )\n          if (selected && !this.isHidden) {\n            this.commit(selected)\n            if (!this.hasSubmitOnEnterValue) {\n              event.preventDefault()\n            }\n          }\n        }\n        break\n    }\n  }\n\n  onInputBlur() {\n    if (this.mouseDown) return\n    this.close();\n  }\n\n  commit(selected) {\n    if (selected.getAttribute(\"aria-disabled\") === \"true\") return\n\n    if (selected instanceof HTMLAnchorElement) {\n      selected.click()\n      this.close();\n      return\n    }\n\n    const textValue = this.extractTextValue(selected)\n    const value = selected.getAttribute(\"data-autocomplete-value\") || textValue\n    this.inputTarget.value = textValue\n\n    if (this.hasHiddenTarget) {\n      this.hiddenTarget.value = value\n      this.hiddenTarget.dispatchEvent(new Event(\"input\"))\n      this.hiddenTarget.dispatchEvent(new Event(\"change\"))\n    } else {\n      this.inputTarget.value = value\n    }\n\n    this.inputTarget.focus()\n    this.hideAndRemoveOptions()\n\n    this.element.dispatchEvent(\n      new CustomEvent(\"autocomplete.change\", {\n        bubbles: true,\n        detail: { value: value, textValue: textValue }\n      })\n    )\n  }\n\n  onResultsClick(event) {\n    if (!(event.target instanceof Element)) return\n    const selected = event.target.closest('[role=\"option\"]')\n    if (selected) this.commit(selected)\n  }\n\n  onResultsMouseDown() {\n    this.mouseDown = true\n    this.resultsTarget.addEventListener(\n      \"mouseup\",\n      () => (this.mouseDown = false),\n      { once: true }\n    )\n  }\n\n  onInputChange() {\n    this.element.removeAttribute(\"value\")\n    this.fetchResults()\n  }\n\n  identifyOptions() {\n    let id = 0\n    for (const el of this.resultsTarget.querySelectorAll(\n      '[role=\"option\"]:not([id])'\n    )) {\n      el.id = `${this.resultsTarget.id}-option-${id++}`\n    }\n  }\n\n  hideAndRemoveOptions() {\n    this.close();\n    this.resultsTarget.innerHTML = null\n  }\n\n  fetchResults() {\n    const query = this.inputTarget.value.trim()\n    if (!query || query.length < this.minLengthValue) {\n      this.hideAndRemoveOptions()\n      return\n    }\n\n    if (!this.hasUrlValue) return\n\n    const headers = { \"X-Requested-With\": \"XMLHttpRequest\" }\n    const url = new URL(this.urlValue, window.location.href)\n    const params = new URLSearchParams(url.search.slice(1))\n    params.append(\"q\", query)\n    url.search = params.toString()\n\n    this.element.dispatchEvent(new CustomEvent(\"loadstart\"))\n\n    fetch(url.toString(), { headers })\n      .then(response => response.text())\n      .then(html => {\n        this.resultsTarget.innerHTML = html\n        this.identifyOptions()\n        const hasResults = !!this.resultsTarget.querySelector('[role=\"option\"]')\n        if (hasResults) {\n          this.open();\n        } else {\n          this.close();\n        }\n        this.element.dispatchEvent(new CustomEvent(\"load\"))\n        this.element.dispatchEvent(new CustomEvent(\"loadend\"))\n      })\n      .catch(() => {\n        this.element.dispatchEvent(new CustomEvent(\"error\"))\n        this.element.dispatchEvent(new CustomEvent(\"loadend\"))\n      })\n  }\n\n  open() {\n    if (!this.isHidden) return\n    if (!this.hasSkipHiddenPropertyValue) {\n      this.resultsTarget.hidden = false\n    }\n    this.isHidden = false;\n    this.element.setAttribute(\"aria-expanded\", \"true\")\n    this.element.dispatchEvent(\n      new CustomEvent(\"toggle\", {\n        detail: { action: 'open', inputTarget: this.inputTarget, resultsTarget: this.resultsTarget }\n      })\n    )\n  }\n\n  close() {\n    if (this.isHidden) return\n    if (!this.hasSkipHiddenPropertyValue) {\n      this.resultsTarget.hidden = true\n    }\n    this.isHidden = true;\n    this.inputTarget.removeAttribute(\"aria-activedescendant\")\n    this.element.setAttribute(\"aria-expanded\", \"false\")\n    this.element.dispatchEvent(\n      new CustomEvent(\"toggle\", {\n        detail: { action: 'close', inputTarget: this.inputTarget, resultsTarget: this.resultsTarget }\n      })\n    )\n  }\n\n  extractTextValue = el =>\n    el.hasAttribute(\"data-autocomplete-label\")\n      ? el.getAttribute(\"data-autocomplete-label\")\n      : el.textContent.trim()\n}\n"],"names":["Controller","extractTextValue","el","hasAttribute","getAttribute","textContent","trim","connect","this","close","inputTarget","setAttribute","mouseDown","onInputChange","debounce","bind","onResultsClick","onResultsMouseDown","onInputBlur","onKeydown","addEventListener","resultsTarget","focus","disconnect","hasInputTarget","removeEventListener","onInputFocus","hasResultsTarget","sibling","next","options","Array","from","querySelectorAll","selected","querySelector","index","indexOf","length","select","target","removeAttribute","classList","remove","selectedClasses","add","id","scrollIntoView","event","key","isHidden","hideAndRemoveOptions","stopPropagation","preventDefault","item","commit","hasSubmitOnEnterValue","HTMLAnchorElement","click","textValue","value","hasHiddenTarget","hiddenTarget","dispatchEvent","Event","element","CustomEvent","bubbles","detail","Element","closest","once","fetchResults","identifyOptions","innerHTML","query","minLengthValue","hasUrlValue","url","URL","urlValue","window","location","href","params","URLSearchParams","search","slice","append","toString","fetch","headers","then","response","text","html","open","catch","hasSkipHiddenPropertyValue","hidden","action","targets","classes","values","submitOnEnter","Boolean","String","minLength","Number","skipHiddenProperty"],"mappings":"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"}